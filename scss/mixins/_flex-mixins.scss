////
/// @access public
/// @group Flex
/// @link https://www.alsacreations.com/tuto/lire/1493-css3-flexbox-layout-module.html Alsacreations
/// @link http://jonibologna.com/content/images/flexboxsheet.pdf FlexboxSheet
/// @link https://css-tricks.com/snippets/css/a-guide-to-flexbox/ CSS-TRICKS 
////

/// Declare easily a container display: flex
/// @output `display: flex`
@mixin flex() {
	display: flex;
}

/// Declare all properties to define a container as display: flex.
/// @param {Keyword} $direction [$flex-container-direction-default] - Define direction of child of container, possible values : 
/// 	- row
///		- column 
///		- row-reverse 
///		- column reverse
/// @param {string} $wrap [$flex-container-wrap-default] - Possible values : 
/// 	- nowrap
/// 	- wrap
/// 	- wrap-reverse
/// @param {string} $align-content [$flex-container-align-content-default] - Possible values : 
/// 	- flex-start
/// 	- flex-end
/// 	- center
/// 	- space-between
/// 	- space-around
/// 	- stretch
/// @param {string} $align-items [$flex-container-align-items-default] - Possible values : 
/// 	- flex-start
/// 	- flex-end
/// 	- center
/// 	- baseline
/// 	- stretch
/// @param {string} $justify-content [$flex-container-justify-content-default] - Possible values : 
/// 	- flex-start
/// 	- flex-end
/// 	- center
/// 	- space-between
/// 	- space-around
/// 	- space-evenly
/// @require {mixin} flex
/// @require $flex-container-direction-default
/// @require $flex-container-wrap-default
/// @require $flex-container-align-content-default
/// @require $flex-container-align-items-default
/// @require $flex-container-justify-content-default
@mixin flex-container($direction: $flex-container-direction-default, $wrap: $flex-container-wrap-default, $align-content: $flex-container-align-content-default, $align-items: $flex-container-align-items-default, $justify-content: $flex-container-justify-content-default) {
	@include flex;
	flex-direction: $direction;
	flex-wrap: $wrap;
	align-content: $align-content;
	align-items: $align-items;
	justify-content: $justify-content;
}

/// Define property for flex item
/// @param {string} $flex [$flex-items-flex-default] !!!! auto is mandatory for IE
/// @param {string} $align-self [$flex-items-align-self-default] - Possible values : 
/// 	- flex-start
/// 	- flex-end
/// 	- center
/// 	- baseline
/// 	- stretch
/// @param {int} $order [$flex-items-order-default] - -1 to put element in first
/// @require $flex-items-flex-default
/// @require $flex-items-align-self-default
/// @require $flex-items-order-default
@mixin flex-item($flex: $flex-items-flex-default, $align-self: $flex-items-align-self-default, $order: $flex-items-order-default) {
  flex: $flex;
  align-self: $align-self;
  order: $order;
}

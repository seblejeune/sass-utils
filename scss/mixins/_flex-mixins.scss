////
/// @access public
/// @group Flex
/// @link https://www.alsacreations.com/tuto/lire/1493-css3-flexbox-layout-module.html Alsacreations
/// @link http://jonibologna.com/content/images/flexboxsheet.pdf FlexboxSheet
/// @link https://css-tricks.com/snippets/css/a-guide-to-flexbox/ CSS-TRICKS 
////

/// Declare easily a container display: flex
/// @output `display: flex`
@mixin flex() {
	display: flex;
}

/// Declare all properties to define a container as display: flex.
/// @param {Keyword} $direction [row] - Define direction of child of container, possible values : 
/// 	- row
///		- column 
///		- row-reverse 
///		- column reverse
/// @param {string} $wrap [nowrap] - Possible values : 
/// 	- nowrap
/// 	- wrap
/// 	- wrap-reverse
/// @param {string} $align-content [stretch] - Possible values : 
/// 	- flex-start
/// 	- flex-end
/// 	- center
/// 	- space-between
/// 	- space-around
/// 	- stretch
/// @param {string} $align-items [stretch] - Possible values : 
/// 	- flex-start
/// 	- flex-end
/// 	- center
/// 	- baseline
/// 	- stretch
/// @param {string} $justify-content [flex-start] - Possible values : 
/// 	- flex-start
/// 	- flex-end
/// 	- center
/// 	- space-between
/// 	- space-around
/// 	- space-evenly
/// @require {mixin} flex
@mixin flex-container($direction: null, $wrap: null, $align-content: null, $align-items: null, $justify-content: null) {
	@include flex;
	flex-direction: $direction;
	flex-wrap: $wrap;
	align-content: $align-content;
	align-items: $align-items;
	justify-content: $justify-content;
}

/// Define property for flex item
/// @param {string} $flex [1 1 auto] !!!! auto is mandatory for IE
/// @param {string} $align-self [stretch] - Possible values : 
/// 	- flex-start
/// 	- flex-end
/// 	- center
/// 	- baseline
/// 	- stretch
/// @param {int} $order [null] - -1 to put element in first
@mixin flex-item($flex: 1 1 auto, $align-self: null, $order: null) {
  flex: $flex;
  align-self: $align-self;
  order: $order;
}
